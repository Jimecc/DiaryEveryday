{"ast":null,"code":"// import axios from 'axios'\n//\n// const service = axios.create({\n//     responseType: 'arraybuffer'\n// })\n// service.interceptors.request.use(config => {\n//     config.headers['Authorization'] = window.sessionStorage.getItem('tokenStr');\n//     return config\n// }, error => {\n//     console.log(error)\n// });\n//\n// service.interceptors.response.use(\n//     resp => {\n//         const headers = resp.headers;\n//         let reg = RegExp(/application\\/json/);\n//         if (headers['content-type'].match(reg)) {\n//             resp.data = uintToString(resp.data);\n//         } else {\n//             let fileDownload = require('js-file-download');\n//             let fileName = headers[\"content-disposition\"].split(\";\")\n//                 [1].split(\"filename=\")[1];\n//             let contentType = headers[\"content-type\"];\n//             fileName = decodeURIComponent(fileName);\n//             fileDownload(resp.data, fileName, contentType)\n//         }\n//     },error => {\n//         console.log(error);\n//     }\n// );\n// let base = '';\n// export const downloadRequest = (url, params) => {\n//     return service({\n//         method: 'get',\n//         url: `${base}${url}`,\n//         data: params\n//     })\n// }\n// function uintToString(uintArray) {\n//     let encodedString = String.fromCharCode.apply(null, new\n//         Uint8Array(uintArray)),\n//         decodedString = decodeURIComponent(escape(encodedString));\n//     return JSON.parse(decodedString);\n// }\n// export default service","map":{"version":3,"names":[],"sources":["/Users/hsk/Project/Diary/web/src/utils/download.js"],"sourcesContent":["// import axios from 'axios'\n//\n// const service = axios.create({\n//     responseType: 'arraybuffer'\n// })\n// service.interceptors.request.use(config => {\n//     config.headers['Authorization'] = window.sessionStorage.getItem('tokenStr');\n//     return config\n// }, error => {\n//     console.log(error)\n// });\n//\n// service.interceptors.response.use(\n//     resp => {\n//         const headers = resp.headers;\n//         let reg = RegExp(/application\\/json/);\n//         if (headers['content-type'].match(reg)) {\n//             resp.data = uintToString(resp.data);\n//         } else {\n//             let fileDownload = require('js-file-download');\n//             let fileName = headers[\"content-disposition\"].split(\";\")\n//                 [1].split(\"filename=\")[1];\n//             let contentType = headers[\"content-type\"];\n//             fileName = decodeURIComponent(fileName);\n//             fileDownload(resp.data, fileName, contentType)\n//         }\n//     },error => {\n//         console.log(error);\n//     }\n// );\n// let base = '';\n// export const downloadRequest = (url, params) => {\n//     return service({\n//         method: 'get',\n//         url: `${base}${url}`,\n//         data: params\n//     })\n// }\n// function uintToString(uintArray) {\n//     let encodedString = String.fromCharCode.apply(null, new\n//         Uint8Array(uintArray)),\n//         decodedString = decodeURIComponent(escape(encodedString));\n//     return JSON.parse(decodedString);\n// }\n// export default service\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"script","externalDependencies":[]}