{"ast":null,"code":"import axios from 'axios';\n// import { Message } from 'element-ui';\n// import router from '../router'\n\n// 请求拦截器\n// axios.interceptors.request.use(config=>{\n//     // 如果存在 token，请求携带这个 token\n//     if(window.sessionStorage.getItem('tokenStr')){\n//         config.headers['Authorization'] = window.sessionStorage.getItem('tokenStr');\n//     }\n//     return config;\n// },error=>{\n//     console.log(error);\n//\n// })\n//\n// // 响应拦截器\n// axios.interceptors.response.use(success=>{\n//     // 业务逻辑错误\n//     if(success.status && success.status == 200){\n//         if(success.data.code == 500 || success.data.code == 401 || success.data.code == 403){\n//             Message.error({message:success.data.message});\n//             return;\n//         }\n//         if(success.data.message){\n//             Message.success({message:success.data.message});\n//         }\n//     }\n//     return success.data;\n//\n// },error=>{\n//     if(error.response.code == 504 || error.response.code == 404){\n//         Message.error({message:'服务器被吃了'});\n//     }else if(error.response.code == 403){\n//         Message.error({message:'权限不足，请联系管理员！'});\n//     }else if(error.response.ocde == 401){\n//         Message.error({message:'尚未登录，请登录！'});\n//         router.replace('/');\n//     }else{\n//         if(error.response.data.message){\n//             Message.error({message:error.response.data.message});\n//         }else{\n//             Message.error({message:'未知错误 o(╯□╰)o'});\n//         }\n//     }\n//     return;\n// })\n\nlet base = '';\nexport const postRequest = (url, params) => {\n  return axios({\n    method: 'post',\n    url: `${base}${url}`,\n    data: params\n  });\n};\nexport const putRequest = (url, params) => {\n  return axios({\n    method: 'put',\n    url: `${base}${url}`,\n    data: params\n  });\n};\nexport const getRequest = (url, params) => {\n  return axios({\n    method: 'get',\n    url: `${base}${url}`,\n    data: params\n  });\n};\nexport const deleteRequest = (url, params) => {\n  return axios({\n    method: 'delete',\n    url: `${base}${url}`,\n    data: params\n  });\n};","map":{"version":3,"names":["axios","base","postRequest","url","params","method","data","putRequest","getRequest","deleteRequest"],"sources":["/Users/hsk/Project/Diary/web/src/units/api.js"],"sourcesContent":["import axios from 'axios'\n// import { Message } from 'element-ui';\n// import router from '../router'\n\n\n// 请求拦截器\n// axios.interceptors.request.use(config=>{\n//     // 如果存在 token，请求携带这个 token\n//     if(window.sessionStorage.getItem('tokenStr')){\n//         config.headers['Authorization'] = window.sessionStorage.getItem('tokenStr');\n//     }\n//     return config;\n// },error=>{\n//     console.log(error);\n//\n// })\n//\n// // 响应拦截器\n// axios.interceptors.response.use(success=>{\n//     // 业务逻辑错误\n//     if(success.status && success.status == 200){\n//         if(success.data.code == 500 || success.data.code == 401 || success.data.code == 403){\n//             Message.error({message:success.data.message});\n//             return;\n//         }\n//         if(success.data.message){\n//             Message.success({message:success.data.message});\n//         }\n//     }\n//     return success.data;\n//\n// },error=>{\n//     if(error.response.code == 504 || error.response.code == 404){\n//         Message.error({message:'服务器被吃了'});\n//     }else if(error.response.code == 403){\n//         Message.error({message:'权限不足，请联系管理员！'});\n//     }else if(error.response.ocde == 401){\n//         Message.error({message:'尚未登录，请登录！'});\n//         router.replace('/');\n//     }else{\n//         if(error.response.data.message){\n//             Message.error({message:error.response.data.message});\n//         }else{\n//             Message.error({message:'未知错误 o(╯□╰)o'});\n//         }\n//     }\n//     return;\n// })\n\n\nlet base = '';\nexport const postRequest=(url,params)=>{\n    return axios({\n        method: 'post',\n        url:`${base}${url}`,\n        data:params\n    })\n}\n\nexport const putRequest=(url,params)=>{\n    return axios({\n        method:'put',\n        url:`${base}${url}`,\n        data:params\n    })\n}\n\nexport const getRequest=(url,params)=>{\n    return axios({\n        method:'get',\n        url:`${base}${url}`,\n        data:params\n    })\n}\n\nexport const deleteRequest=(url,params)=>{\n    return axios({\n        method:'delete',\n        url:`${base}${url}`,\n        data:params\n    })\n}\n\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,IAAIC,IAAI,GAAG,EAAE;AACb,OAAO,MAAMC,WAAW,GAAC,CAACC,GAAG,EAACC,MAAM,KAAG;EACnC,OAAOJ,KAAK,CAAC;IACTK,MAAM,EAAE,MAAM;IACdF,GAAG,EAAE,GAAEF,IAAK,GAAEE,GAAI,EAAC;IACnBG,IAAI,EAACF;EACT,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMG,UAAU,GAAC,CAACJ,GAAG,EAACC,MAAM,KAAG;EAClC,OAAOJ,KAAK,CAAC;IACTK,MAAM,EAAC,KAAK;IACZF,GAAG,EAAE,GAAEF,IAAK,GAAEE,GAAI,EAAC;IACnBG,IAAI,EAACF;EACT,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMI,UAAU,GAAC,CAACL,GAAG,EAACC,MAAM,KAAG;EAClC,OAAOJ,KAAK,CAAC;IACTK,MAAM,EAAC,KAAK;IACZF,GAAG,EAAE,GAAEF,IAAK,GAAEE,GAAI,EAAC;IACnBG,IAAI,EAACF;EACT,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMK,aAAa,GAAC,CAACN,GAAG,EAACC,MAAM,KAAG;EACrC,OAAOJ,KAAK,CAAC;IACTK,MAAM,EAAC,QAAQ;IACfF,GAAG,EAAE,GAAEF,IAAK,GAAEE,GAAI,EAAC;IACnBG,IAAI,EAACF;EACT,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}